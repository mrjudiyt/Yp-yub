# Generated by CoffeeScript 1.4.0

# countdown is a simple jquery plugin for countdowns
# Dual licensed under the MIT and GPL-3.0 licenses.
# @source: http://github.com/rendro/countdown/
# @autor: Robert Fleischmann
# @version: 1.0.1

# Anonymous function to encapsulate the code
(->

  # Self-invoking function taking jQuery as an argument
  (($) ->

    # Define the countdown plugin
    $.countdown = (el, options) ->

      # Private function to get the date data
      getDateData = (endDate) ->
        # ... (code for calculating time difference and formatting)

      # Initialize the countdown object
      @_this = this
      @_this.el = el
      @_this.$el = $(el)
      @_this.$el.data("countdown", @_this)

      @_this.init = ->
        # Merge default options with user-provided options
        @_this.options = $.extend({}, $.countdown.defaultOptions, options)

        # Set the date option to one week from now
        oneWeekFromNow = new Date()
        oneWeekFromNow.setDate(oneWeekFromNow.getDate() + 7)
        @_this.options.date = oneWeekFromNow

        if @_this.options.refresh
          @_this.interval = setInterval ->
            @_this.render()
          , @_this.options.refresh

        @_this.render()
        @_this

      # ... (rest of the functions remain unchanged)

    # Default options for the countdown plugin
    $.countdown.defaultOptions = {
      date: new Date(), // Set to one week from now
      refresh: 1000,
      onEnd: $.noop,
      render: (date) ->
        $(@el).html("#{date.years} years, #{date.days} days, #{_this.leadingZeros(date.hours)} hours, #{_this.leadingZeros(date.min)} min, and #{_this.leadingZeros(date.sec)} sec")
    }

    # Extend jQuery to include the countdown plugin
    $.fn.countdown = (options) ->
      $.each this, (i, el) ->
        $el = $(el)
        if not $el.data('countdown')
          $el.data('countdown', new $.countdown(el, options))

    void 0
  )(jQuery)
).call(this)
